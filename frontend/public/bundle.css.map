{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/pages/Home.svelte",
    "../src/pages/components/Navbar.svelte",
    "../src/pages/Seasons.svelte"
  ],
  "sourcesContent": [
    "<script>\n  // this function ensures that when some navigates to a new page,\n  // the new page loads at the top -- otherwise the y position,\n  // will be wherever the last y position was\n  history.pushState = new Proxy(history.pushState, {\n    apply(target, thisArg, argumentsList) {\n      // scrollTo(0,0) <-- order of operation can mather (ty, @t-lock)\n      Reflect.apply(target, thisArg, argumentsList);\n      scrollTo(0, 0);\n    },\n  });\n  // importing packages\n  import page from \"page\";\n\n  // importing components\n  import Navbar from \"./pages/components/Navbar.svelte\";\n\n  // importing all the possible routes\n  import Home from \"./pages/Home.svelte\";\n  import Seasons from \"./pages/Seasons.svelte\";\n\n  // family receipes\n  import BraisedBeef from \"./pages/family/BraisedBeef.svelte\";\n  import ChickenPan from \"./pages/family/ChickenPan.svelte\";\n  import SausageBalls from \"./pages/family/SausageBalls.svelte\";\n  import SweetRolls from \"./pages/family/SweetRolls.svelte\";\n  import Biscuits from \"./pages/family/Biscuits.svelte\";\n  import Grits from \"./pages/family/Grits.svelte\";\n  import SweetPotatoSoup from \"./pages/family/SweetPotatoSoup.svelte\";\n\n  // french receipes\n  import RoastedCarrots from \"./pages/french/RoastedCarrots.svelte\";\n  import CoqAuVin from \"./pages/french/CoqAuVin.svelte\";\n  import BeefBourguignon from \"./pages/french/BeefBourguignon.svelte\";\n  import Baguette from \"./pages/french/Baguette.svelte\";\n  import FrenchOnion from \"./pages/french/FrenchOnion.svelte\";\n  import PouletChasseur from \"./pages/french/PouletChasseur.svelte\";\n\n  // italian\n  import HomemadePasta from \"./pages/italian/HomemadePasta.svelte\";\n  import CacioPepe from \"./pages/italian/CacioPepe.svelte\";\n  import Pesto from \"./pages/italian/Pesto.svelte\";\n\n  // Central European\n  import Paprika from \"./pages/central/Paprika.svelte\";\n  import Korozott from \"./pages/central/Korozott.svelte\";\n  import Makosguba from \"./pages/central/Makosguba.svelte\";\n  import HungarianPea from \"./pages/central/HungarianPea.svelte\";\n\n  // Other\n  import Other from \"./pages/other/Other.svelte\";\n  import Rye from \"./pages/other/Rye.svelte\";\n\n  // set default component\n  let current = Home;\n\n  // Map routes to page. If a route is hit the current\n  // reference is set to the route's component\n  page(\"/\", () => (current = Home));\n  page(\"/seasons\", () => (current = Seasons));\n\n  // family routes\n  page(\"/braised_beef\", () => (current = BraisedBeef));\n  page(\"/chicken_pan\", () => (current = ChickenPan));\n  page(\"/sausage_balls\", () => (current = SausageBalls));\n  page(\"/sweet_rolls\", () => (current = SweetRolls));\n  page(\"/biscuits\", () => (current = Biscuits));\n  page(\"/grits\", () => (current = Grits));\n  page(\"/sweet_potato_soup\", () => (current = SweetPotatoSoup));\n\n  // french routes\n  page(\"/roasted_carrots\", () => (current = RoastedCarrots));\n  page(\"/coq_au_vin\", () => (current = CoqAuVin));\n  page(\"/beef_bourguignon\", () => (current = BeefBourguignon));\n  page(\"/baguette\", () => (current = Baguette));\n  page(\"/french_onion_soup\", () => (current = FrenchOnion));\n  page(\"/poulet_chasseur\", () => (current = PouletChasseur));\n\n  // italian routes\n  page(\"/homemade_pasta\", () => (current = HomemadePasta));\n  page(\"/cacio_pepe\", () => (current = CacioPepe));\n  page(\"/pesto\", () => (current = Pesto));\n\n  // central routes\n  page(\"/chicken_paprika\", () => (current = Paprika));\n  page(\"/korozott\", () => (current = Korozott));\n  page(\"/makosguba\", () => (current = Makosguba));\n  page(\"/hungarian_pea\", () => (current = HungarianPea));\n\n  // other routes\n  page(\"/rye_bread\", () => (current = Rye));\n\n  // activate router\n  page.start();\n</script>\n\n<main>\n  <Navbar />\n  <svelte:component this={current} />\n</main>\n\n<style>\n  main {\n    max-width: 720px;\n    margin-right: auto;\n    margin-left: auto;\n    padding-bottom: 50px;\n  }\n  :global(body) {\n    background-color: #f5e29c26;\n  }\n</style>\n",
    "<script>\n  // each of these has a menu in it\n  import Family from \"./family/Family.svelte\";\n  import French from \"./french/French.svelte\";\n  import Central from \"./central/Central.svelte\";\n  import Italian from \"./italian/Italian.svelte\";\n  import Other from \"./other/Other.svelte\";\n\n  // depending on what the user selects, a different menu will show\n  let menu = Family;\n\n  // depending on what menu is clicked, a selected class will change\n  let current = \"family\";\n</script>\n\n<h2>Recipes</h2>\n\n<div class=\"menus\">\n  <div\n    on:click={() => (menu = Family)}\n    on:click={() => (current = \"family\")}\n    class=\"menu {current === 'family' ? 'selected' : ''}\"\n  >\n    Family Classics\n  </div>\n  <div\n    on:click={() => (menu = French)}\n    on:click={() => (current = \"french\")}\n    class=\"menu {current === 'french' ? 'selected' : ''}\"\n  >\n    French\n  </div>\n  <div\n    on:click={() => (menu = Italian)}\n    on:click={() => (current = \"italian\")}\n    class=\"menu {current === 'italian' ? 'selected' : ''}\"\n  >\n    Italian\n  </div>\n</div>\n\n<div class=\"menus\">\n  <div\n    on:click={() => (menu = Family)}\n    on:click={() => (current = \"english\")}\n    class=\"menu {current === 'english' ? 'selected' : ''}\"\n  >\n    English\n  </div>\n\n  <div\n    on:click={() => (menu = Central)}\n    on:click={() => (current = \"central\")}\n    class=\"menu {current === 'central' ? 'selected' : ''}\"\n  >\n    Central European\n  </div>\n  <div\n    on:click={() => (menu = Other)}\n    on:click={() => (current = \"other\")}\n    class=\"menu {current === 'other' ? 'selected' : ''}\"\n  >\n    Other\n  </div>\n</div>\n<hr />\n<svelte:component this={menu} />\n\n<style>\n  .menus {\n    font-weight: bold;\n    display: table;\n    width: 100%; /*Optional*/\n    table-layout: fixed; /*Optional*/\n    border-spacing: 10px; /*Optional*/\n    text-align: center;\n  }\n\n  .menu {\n    display: table-cell;\n    cursor: pointer;\n  }\n\n  .menu:hover {\n    text-decoration: underline;\n  }\n\n  .selected {\n    text-decoration: underline;\n  }\n\n  h2 {\n    text-align: center;\n  }\n</style>\n",
    "<nav class=\"navbar\">\n  <a href=\"/\">Home</a>\n  <a href=\"/seasons\">Seasons</a>\n</nav>\n\n<style>\n  .navbar {\n    overflow: hidden;\n    border-bottom: 1px double black;\n  }\n\n  .navbar a {\n    float: left;\n    display: block;\n    color: black;\n    text-align: center;\n    padding: 16px 0px;\n    text-decoration: none;\n    font-size: 17px;\n    border-bottom: 3px solid transparent;\n    margin-right: 10px;\n  }\n</style>\n",
    "<script>\n  async function getData() {\n    let response = await fetch(\"./location\");\n    let users = await response.json();\n    console.log(users);\n    return users;\n  }\n  const promise = getData();\n</script>\n\n{#await promise}\n  <h3>Loading...</h3>\n{:then data}\n  <h3>\n    In {data.state} during {data.period}\n    {data.month}, the following produce is in season:\n  </h3>\n  <div class=\"container\">\n    {#each data.produce as { name, description }}\n      <div class=\"card-wrap\">\n        <div class=\"card\">\n          <span class=\"title\">{name}</span>\n          <br /><br />\n          <span class=\"text\">{description}</span>\n        </div>\n      </div>\n    {/each}\n  </div>\n{/await}\n\n<style>\n  /* Float four columns side by side */\n\n  * {\n    box-sizing: border-box;\n  }\n\n  .container {\n    display: flex;\n    flex-flow: row wrap;\n  }\n\n  .card-wrap {\n    flex: 0 0 33.333%;\n    display: flex;\n    padding: 10px; /* gutter width */\n  }\n\n  .card {\n    box-shadow: 0 0 4px rgba(0, 0, 0, 0.4);\n    flex: 0 0 100%;\n    padding: 16px;\n    background-color: #f1f1f1;\n    text-align: center;\n  }\n\n  .title {\n    font-weight: bold;\n    font-size: 18px;\n  }\n</style>\n"
  ],
  "names": [],
  "mappings": "AAsGE,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,KAAK,CAChB,YAAY,CAAE,IAAI,CAClB,WAAW,CAAE,IAAI,CACjB,cAAc,CAAE,IAAI,AACtB,CAAC,AACO,IAAI,AAAE,CAAC,AACb,gBAAgB,CAAE,SAAS,AAC7B,CAAC;ACzCD,MAAM,cAAC,CAAC,AACN,WAAW,CAAE,IAAI,CACjB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,KAAK,CACnB,cAAc,CAAE,IAAI,CACpB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,OAAO,CAAE,UAAU,CACnB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,mBAAK,MAAM,AAAC,CAAC,AACX,eAAe,CAAE,SAAS,AAC5B,CAAC,AAED,SAAS,cAAC,CAAC,AACT,eAAe,CAAE,SAAS,AAC5B,CAAC,AAED,EAAE,cAAC,CAAC,AACF,UAAU,CAAE,MAAM,AACpB,CAAC;ACvFD,OAAO,cAAC,CAAC,AACP,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,GAAG,CAAC,MAAM,CAAC,KAAK,AACjC,CAAC,AAED,qBAAO,CAAC,CAAC,cAAC,CAAC,AACT,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,IAAI,CAAC,GAAG,CACjB,eAAe,CAAE,IAAI,CACrB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,CACpC,YAAY,CAAE,IAAI,AACpB,CAAC;ACYD,cAAE,CAAC,AACD,UAAU,CAAE,UAAU,AACxB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,GAAG,CAAC,IAAI,AACrB,CAAC,AAED,UAAU,cAAC,CAAC,AACV,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CACjB,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,AACf,CAAC,AAED,KAAK,cAAC,CAAC,AACL,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACtC,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,OAAO,CACzB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,WAAW,CAAE,IAAI,CACjB,SAAS,CAAE,IAAI,AACjB,CAAC"
}